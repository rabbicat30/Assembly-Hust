;SI作为BNAME中变址寄存器，从BNAME开始
;DI作为IN_NAME中变址寄存器，从IN_NAME开始
;CX循环计数
;AL待比较字符
.386
STACK 	SEGMENT USE16 STACK
        DB 200 DUP(0)
STACK 	ENDS

DATA	SEGMENT USE16
BNAME  DB	'LIU MEI',0  ;老板姓名
BPASS  DB	'358666',0,0,0  ;密码
AUTH  DB		0  ;当前登录状态
GOOD  DW 0
N  EQU	30  ;商品的数量
SNAME  DB	'LMSHOP',0  ;网店名称，用0结束
GA1  DB		'PEN',7 DUP(0),10  ;商品名称及折扣
         DW  	35,56,70,25,?  ;推荐度还未计算
GA2  DB		'BOOK', 6 DUP(0),9
         DW		12,30,25,5,?
GAN  DB		N-2 DUP('TempValue',0,8,15,0,20,0,30,0,2,0,?,?)
C1 DW 0;用来存放商
C2 DB 0;用来存放计算后的推荐度
PUTNAME   DB		0AH,0DH,'Please Input Your Name: ','$'
PUTPASSWORD  DB	0AH,0DH,'Please Inout Your Password: ','$'
INPUT  DB	0AH,0DH,'Please Input X(1-9): ','$',0AH,0DH
INERR  DB	0AH,0DH,'Input Error!Try Aggain!','$'
LOGIN DB	0AH,0DH,'Login Successfully!','$'
GOODNAME  DB	0AH,0DH,'Input the Name of Goods You Look Up And End With 0: ','$'
NOTLOG  DB	0AH,0DH,'Please Log In First!','$'
NOGOOD DB	0AH,0DH,'No Good Left','$'
FINDSUC DB 0AH,0DH,'Find Successfully!$'
MENU_A DW INPUTNAME,FINDGOOD,BUYGOOD,COUNT,ARRAY,CHANGEINFO,CHANGEEN,DISPLAY,EXIT
MENU_B DB 0AH,0DH,'1.LOG IN',0AH,0DH,'2.FINDGOOD',0AH,0DH,'3.BUYGOOD',0AH,0DH,'4.COUNT POPULATION',0AH,0DH,'5.ARRAY',0AH,0DH,'6.CHANGEINFOMATION',0AH,0DH,'7.CHANGE ENVIRONMENT',0AH,0DH,'8.DISPLAY ADDRESS',0AH,0DH,'9.EXIT$'
YOURNAME DB 0AH,0DH,'NAME: $'
BROWSE_GOOD DB 0AH,0DH,'GOOD: $'
HAVELOGINED DB 'You Have Logged In$'
CSCONTENT DW 0
IN_NAME  DB 8
	DB ?
	DB 8 DUP(0)
IN_PWD  DB 7
	DB ?
	DB 7 DUP(0)
IN_GOOD DB 11
	DB ?
	DB 11 DUP(0)

DATA	ENDS

CODE	SEGMENT USE16
		ASSUME  CS:CODE, SS:STACK, DS:DATA, ES:DATA
START:2
	MOV AX,DATA
	MOV DS,AX
MENU:
	LEA DX,YOURNAME
	MOV AH,9
	INT 21H
	
	CMP AUTH,0
	JE CUSTOMER
	LEA DX,BNAME;显示当前用户名
	MOV AH,9
	INT 21H
LP1:	
	LEA DX,BROWSE_GOOD
	MOV AH,9
	INT 21H
	
	CMP GOOD,0
	JE DISPLAYNOGOOD;无浏览商品
	MOV DX,GOOD;把偏移地址送到BX
	MOV AH,9
	INT 21H
	
LP2:
	LEA DX,MENU_B;显示菜单选项
	MOV AH,9
	INT 21H
	
	
	LEA DX,INPUT;提示输入功能选项
	MOV AH,9
	INT 21H

	MOV AH,1;获取输入
	INT 21H	

	CMP AL,'1';输入的选择不在1-9之间
	JL ERR
	CMP AL,'9'
	JG ERR

	SUB AL,30H;得到数字
	MOV AH,0
	MOVZX EBX,AL
	DEC EBX
	JMP MENU_A[2*EBX]

CUSTOMER:
	MOV DL,0AH
	MOV AH,2
	INT 21H
	JMP LP1
DISPLAYNOGOOD:
	MOV DL,0AH
	MOV AH,2
	INT 21H
	JMP LP2 
ERR:
	LEA DX,INERR
	MOV AH,9
	INT 21H
	JMP MENU
NOTLOGIN:
	LEA DX,NOTLOG
	MOV AH,9
	INT 21H
	JMP MENU
INPUTNAME:
	CMP AUTH,0
	JNE LOGGED
	LEA  DX,PUTNAME;提示输入用户的名字
	MOV  AH,9
	INT  21H

	LEA DX,IN_NAME;输入用户名字
	MOV AH,10
	INT 21H
	
	LEA BX,IN_NAME	
L0:	CMP BYTE PTR [BX+2],0DH;和回车比较
	JE ERR	;是回车输出错误信息
	
	LEA SI,BNAME
	MOV DI,OFFSET IN_NAME +2
	MOV AL,BYTE PTR [SI]
	MOV CX,7
L1:	CMP CX,0
	JE NAMEEXIT
	MOV AL,BYTE PTR [SI];这句话必须放到循环体中
	CMP AL,BYTE PTR [DI]
	JNE ERR;不相等，重新输入
	INC SI
	INC DI
	DEC CX
	JMP L1

NAMEEXIT :
	MOV AUTH,1;输入成功
	MOV BYTE PTR [SI],'$';将结束符放入定义的名称中

INPUTPASSWORD:
	LEA  DX,PUTPASSWORD;提示输入用户的密码
	MOV  AH,9
	INT  21H

	LEA DX,IN_PWD;输入密码
	MOV AH,10
	INT 21H

	
	LEA SI,BPASS
	MOV DI,OFFSET IN_PWD +2
	MOV AL,BYTE PTR [SI]
	MOV CX,6
L2:	CMP CX,0
	JE PWDEXIT
	MOV AL,BYTE PTR [SI]
	CMP AL,BYTE PTR [DI]
	JNE L0;不相等，重新输入
	INC SI
	INC DI
	DEC CX
	JMP L2
	
PWDEXIT:
	LEA DX,LOGIN;	登录成功提示
	MOV AH,9
	INT 21H
	JMP MENU;	登录成功后返回主菜单

FINDGOOD:
	LEA DX,GOODNAME;提醒输入商品名称
	MOV AH,9
	INT 21H

	LEA DX,IN_GOOD
	MOV AH,10
	INT 21H

		
	LEA SI,GA1
	LEA BX,GA1
	MOV DI,OFFSET IN_GOOD+2
	MOV CX,3
L3:	CMP CX,0
	JE ERR	;等于零，全部找完也没找到，提示失败
L4:	MOV AL,BYTE PTR [SI]
	CMP AL,0
	JE FINDSUS	;名称相符，查找成功，返回菜单
	CMP AL,BYTE PTR [DI]
	JNE FINDFAITH	;名称不相符，查找下一个
	INC SI
	INC DI
	JMP L4
	 
FINDSUS:
	CMP BYTE PTR [DI],'0';字符0！
	JNE ERR;还要确定物品名称不是输入的字符串的子串
	MOV BYTE PTR [SI],'$'
	MOV GOOD,BX;将地址信息存放到good中,直接存放就可以
	LEA DX,FINDSUC
	MOV AH,9
	INT 21H
	JMP MENU
FINDFAITH:
	ADD BX,21;查找失败，偏移地址加21个字节,跳转到下一个商品
	MOV SI,BX
	MOV DI,OFFSET IN_GOOD+2
	DEC CX
	JMP L3
;推荐度=（进货价/实际销售价格+已售数量/（2*进货数量））*128
;进货价，销售价，进货总数，已售数目，推荐度，字类型
BUYGOOD:
	CMP GOOD,0
	JE NO_GOOD
	MOV  BX,GOOD
	MOV SI,[BX+15];获得进货总数,不能写成BX+15
	MOV DI,[BX+17];获得已售数目
	CMP SI,DI
	JZ NO_GOOD
	INC DI
	MOV [BX+17],DI
	JMP COUNT
	
COUNT:
	MOV BX,OFFSET GA1
	MOV CX,N
L5:	CMP CX,0
	JE MENU;全部计算完毕
	MOV AX,[BX+17];获得已售数目
	SHL AX,7;先乘以128
	MOV DX,0
	MOV CX,[BX+15];获得进货数量	
	SHR AX,1;已售数量除以2
	DIV CX;再除以进货数量
	MOV C1,AX;商->C1
	MOV AX,[BX+13];得到销售价
	MUL BYTE PTR [BX+10];销售价乘以折扣
	MOV CX,10
	MOV DX,0;不要忘记将高位置0
	DIV CX;再除以10得到实际销售价
	MOV CX,AX;得到的结果放入CX中
	MOV AX,[BX+11];得到进价
	MOV DX,0
	SHL AX,7;进货价乘以128
	DIV CX;得到公式的前半部分(进价/实际销售价格）
	ADD AX,C1
	MOV [BX+19],AX
	ADD BX,21
	DEC CX
	JMP L5
	
ARRAY:
	JMP MENU
CHANGEINFO:
	JMP MENU
CHANGEEN:
	JMP MENU
DISPLAY:
	MOV DL,0AH
	MOV AH,2
	INT 21H
	MOV DL,0DH
	MOV AH,2
	INT 21H
	
	MOV BX,CS
	MOV DH,BH
	SHR DX,8
	AND DL,0F0H
	OR DL,30H;转化为阿斯克码
	CMP DL,39H;判断是数字还是字母
	JBE AD1;为数字，直接输出
	ADD DL,7;否则转化为字母(+37H)
AD1:
	MOV AH,2
	INT 21H
	
	MOV BX,CS
	MOV DH,BH
	SHR DX,8
	AND DL,0FH
	OR DL,30H;转化为阿斯克码
	CMP DL,39H;判断是数字还是字母
	JBE AD2;为数字，直接输出
	ADD DL,7;否则转化为字母(+37H)
AD2:
	MOV AH,2
	INT 21H
	
	MOV BX,CS
	MOV DL,BL
	AND DL,0F0H
	SHR DL,4;应该还要右移四位才对
	OR DL,30H;转化为阿斯克码
	CMP DL,39H;判断是数字还是字母
	JBE AD3;为数字，直接输出
	ADD DL,7;否则转化为字母(+37H)
AD3:
	MOV AH,2
	INT 21H
	
	MOV BX,CS
	MOV DL,BL
	AND DL,0FH
	OR DL,30H;转化为阿斯克码
	CMP DL,39H;判断是数字还是字母
	JBE AD4;为数字，直接输出
	ADD DL,7;否则转化为字母(+37H)
AD4:
	MOV AH,2
	INT 21H
	
	JMP MENU

NO_GOOD:
	LEA DX,NOGOOD
	MOV AH,9
	INT 21H
	JMP MENU
LOGGED:
	LEA DX,HAVELOGINED
	MOV AH,9
	INT 21H
	JMP MENU
EXIT:
	MOV AH,4CH
	INT 21H
CODE	ENDS
	END  START